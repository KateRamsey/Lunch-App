@model Lunch_App.Models.SurveyEditVM

@{
    ViewBag.Title = "LunchConnect | Survey";
}

<h2>So, what do you think about lunch?</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="btn-group" data-toggle="buttons">
            <div class="btn btn-lg btn-info">
                @Html.LabelFor(model => model.IsComing, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.IsComing)
                @Html.ValidationMessageFor(model => model.IsComing, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.TimeAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeAvailable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeAvailable, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinutesAvailiable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinutesAvailiable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinutesAvailiable, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCodeRadius, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ZipCodeRadius, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCodeRadius, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CuisineWanted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CuisineWanted, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CuisineWanted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CuisineNotWanted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CuisineNotWanted, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CuisineNotWanted, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.SuggestedResturantId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SuggestedResturantId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SuggestedResturantId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="IssuesLabel">What dietary restrictions/issues do you have?</div>

        <div class="btn-group" data-toggle="buttons">
            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.Vegan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.Vegan)
                    @Html.ValidationMessageFor(model => model.Vegan, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.Vegetarian, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.Vegetarian)
                    @Html.ValidationMessageFor(model => model.Vegetarian, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.GlutenFree, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.GlutenFree)
                    @Html.ValidationMessageFor(model => model.GlutenFree, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.ShellFishAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.ShellFishAllergy)
                    @Html.ValidationMessageFor(model => model.ShellFishAllergy, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="btn-group" data-toggle="buttons">

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.NutAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.NutAllergy)
                    @Html.ValidationMessageFor(model => model.NutAllergy, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.Kosher, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="checkbox">
                    @Html.EditorFor(model => model.Kosher)
                    @Html.ValidationMessageFor(model => model.Kosher, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.Halaal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.Halaal)
                    @Html.ValidationMessageFor(model => model.Halaal, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="btn btn-md btn-warning">
                @Html.LabelFor(model => model.LactoseIntolerant, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">

                    @Html.EditorFor(model => model.LactoseIntolerant)
                    @Html.ValidationMessageFor(model => model.LactoseIntolerant, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="That's it, you're one step closer to lunch!" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("LunchConnect Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
