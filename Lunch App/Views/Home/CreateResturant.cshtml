@model Lunch_App.Models.ResturantCreateVM

@{
    ViewBag.Title = "LunchConnect | Add Restaurant";
}

<h2>Add A Restaurant</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationZip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationZip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationZip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoursOfOperation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoursOfOperation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoursOfOperation, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.PriceRange, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceRange, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PriceRange, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CuisineType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CuisineType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CuisineType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <span class="bold lead">
                Dietary issues this restaurant can accommodate:
            </span>

            <div class="btn-group DietaryButtonGroup col-md-9" data-toggle="buttons">
                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.Vegan, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="checkbox">
                        @Html.EditorFor(model => model.Vegan)
                        @Html.ValidationMessageFor(model => model.Vegan, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.Vegetarian, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Vegetarian)
                            @Html.ValidationMessageFor(model => model.Vegetarian, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.GlutenFree, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.GlutenFree)
                            @Html.ValidationMessageFor(model => model.GlutenFree, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.NutAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.NutAllergy)
                            @Html.ValidationMessageFor(model => model.NutAllergy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="btn-group DietaryButtonGroup col-md-offset-4" data-toggle="buttons">
                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.ShellFishAllergy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ShellFishAllergy)
                            @Html.ValidationMessageFor(model => model.ShellFishAllergy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.Kosher, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Kosher)
                            @Html.ValidationMessageFor(model => model.Kosher, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.Halaal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Halaal)
                            @Html.ValidationMessageFor(model => model.Halaal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="btn btn-md btn-primary DietaryButton">
                    @Html.LabelFor(model => model.LactoseIntolerant, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.LactoseIntolerant)
                            @Html.ValidationMessageFor(model => model.LactoseIntolerant, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Restaurant" class="btn btn-warning btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("LunchConnect Dashboard", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
